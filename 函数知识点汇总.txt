sdfsdfsdfsdf


js函数：
    概述:函数是由事件驱动或者当它被调用时执行的可重复的代码块;即:将特定功能的代码封装到一个功能模块中，当需要这个功能时，直接调用这个
        功能模块的接口，也就是封装后的函数名，这样可以减少大量重复代码的书写，达到优化程序的目的。
    js中函数的分类：
        全局(内置)函数，如parseInt() parseFloat()  isNaN()判断是否为一个非数字

      1. 函数的声明与调用
            1.1 函数的声明
            1.2 函数的调用:函数定义好之后，是不能自动执行的，所以需要调用它
                   事件发生时调用
                   js代码中直接调用
      2. 带参数的函数
            2.1 在调用函数时，您可以向其传递值，这些值被称为参数;
            2.2 这些参数可以在函数中使用;
            2.3 您可以发送任意多的参数，由逗号 (,) 分隔。
            2.4 当您声明函数时，请把参数作为变量来声明；
            2.5 调用含参函数时，变量和参数必须以一致的顺序出现。第一个变量就是第一个被传递的参数的给定的值，以此类推。
            
            	形参：在定义函数时使用的参数，目的是用来接收调用该函数时传进来的实际参数；在定义时并不清楚是什么数据，它类似于变量，
            		在函数内生效（局部作用域），函数调用完毕后销毁
            	实参：调用时传递给函数的参数
            	
            	重载：在一个程序中同一个名字的函数声明不同数量的参数，叫做函数的重载；但是js中没有重载的概念，当参数不匹配
    			     时函数也可正常的执行;
    			            
      3. 带返回值的函数  return 返回值;
                如果是仅仅希望退出函数，也可使用return语句
                               
      4. 匿名函数：没有名字的函数
      	 立即执行函数：IIFE（IIFE的全称是Immediately-invoked Function Expression)
      	 
	             基本形式:(function(){...})(); 前面括号包含函数体，后面括号给匿名函数传递参数并立即执行之
	             作用:产生一个局部作用域，避免全局变量的污染以及函数名的冲突；
	             小括号的作用:
	                小括号能把我们的表达式组合分块，并且每一块，也就是每一对小括号，都有一个返回值。这个返回值实际上也就是小括号中表达式的返回值。
	             所以，当我们用一对小括号把匿名函数括起来的时候，实际上小括号对返回的，就是一个匿名函数的Function对象。因此，小括号对加上匿名函
	             数就如同有名字的函数般被我们取得它的引用位置了。所以如果在这个引用变量后面再加上参数列表，就会实现普通函数的调用形式。
	                简单来说就是小括号有返回值，也就是小括号内的函数或者表达式的返回值，所以说小括号内的function返回值等于小括号的返回值

      5. 递归函数：所谓递归函数就是在函数体内调用函数本身(说白了就是自己调用自己)；
	             使用递归函数一定要注意，处理不当就会进入死循环。递归函数只在特定的情况下使用 ，比如阶乘问题
	             常见错误：Maximum call stack size exceeded 最大堆栈超过了最大值
	             解决问题：内存被塞满（内存溢出）的时候，报错才能够停止；检查判断条件是否有错误

      6. 回调函数：被当作参数传递的函数就是回调函数

      7. 闭包函数：闭包就是一个函数能够访问其函数外部作用域中的变量,即在外面可以调用函数中的函数的变量，其实他就是将函数内外部连接起来的桥梁
             	闭包三大特点：
             		7.1 函数嵌套函数
             		7.2 内部函数可以访问外部函数的变量
             		7.3 参数和变量不会被回收
             	对于初学者比较难理解，可以通过以下两句话来加深理解：
             		I 闭包是指有权访问另一个函数作用域中的变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函
             		  数访问这个函数的局部变量。闭包的缺点就是常驻内存，会增大内存使用量，使用不当很容易造成内存泄露。
             		II 不必纠结到底怎样才算闭包，其实你写的每一个函数都算作闭包，即使是全局函数，你访问函数外部的全局变量时，就是闭包的体现。
                案例理解：
                    function test(){
                    	var i = 10;
                    	return function(){
                    		alert(i);
                    	}
                    }

                    var a = test();
                    a();

                    // 变量a在test方法外部是无法访问的，但test方法里面，嵌套了一个匿名函数，通过return返回，test作用域中的变量a，
                    // 可以在匿名函数中访问。并且当test方法执行后，变量a所占内存并不会释放，以达到嵌套的函数还可以访问的目的。

              变量的作用域及垃圾回收机制
                 全局变量：
                 局部变量：
                 垃圾回收制：和java一样，js同样具有垃圾回收机制，释放不需要的内存；如函数调用结束，变量销毁，程序就会自动启动垃
                           圾回收机制回收销毁变量释放空间
      8. 工厂模式  使用工厂模式创建对象
      9. 构造函数
      10. 异常捕获与抛出
            异常：当JavaScript引擎执行Js代码时，发生了错误，导致程序停止运行;
            异常抛出:当异常产生，并且将这个异常生成一个错误信息。
            		捕获异常的语法
            				try{
            					//异常代码
            				}catch(err){
            					//处理错误
            				    console.log(err); //错误信息
            				}
            抛出异常的语法throw语句:
            		JS里用throw指定一个用户定义的异常类型，并抛出。抛出点可以在 try 或 catch 块中(一般都是配合try...catch使用)

练习
    1 当点击按钮时执行 fn 自定义函数
    2 定义函数，页面输出“hello world!”
    3 定义一个打印n行直角三角形的函数
    4 声明两个带参数的函数，并执行
    5 定义函数，求两个数中较大者
    6 定义函数，求两个数的和
    7 写一个有参数和返回值的函数
    8 定义一个函数，输入一个数，判断奇偶性（带参数、带返回值）
    9 定义函数，此函数的返回值是1+2+3+……+N ，其中N为调用函数时传入的参数
    10 定义一个函数，该函数的功能为，传入一个值，返回这个值的平方
    11 定义一个函数，传入一个数组（数组当中的元素都是数值类型），返回数组当中最大的数
    12 定义一个函数，传入一个数值，判断传入的值能否被3和5同时整除，若能，返回true 。若不能，返回false
    13 编写函数，传入一个三位数，如果是水仙花数返回true,否则返回false , 例如传入153 , 返回true，注： 水仙花数 = 个位三次方 + 十位三次方 + 百位三次方
    14 编写函数，分别传入男生月份和女生月份，返回他们的缘分,公式=男生月份%女生月份
         0　有恋爱的缘分，可以终成眷属
         1　有恋爱的缘分，但未必成为眷属
         2　有朋友的缘分，可以发展成为恋人
         3　有朋友的缘分，但未必可以发展成为恋人

面试题
    1. 闭包是什么，有什么特性，对页面有什么影响
            闭包就是一个函数能够访问其函数外部作用域中的变量,即在外面可以调用函数中的函数的变量，其实他就是将函数内外部连接起来的桥梁
            闭包三大特点：函数嵌套函数；内部函数可以访问外部函数的变量；参数和变量不会被回收（造成内存泄漏）
            使用闭包主要是为了设计私有的方法和变量。闭包的优点是可以避免全局变量的污染，缺点是闭包会常驻内存，会增大内存使用量，使用不当
            很容易造成内存泄露

    2. return、break、continue区别